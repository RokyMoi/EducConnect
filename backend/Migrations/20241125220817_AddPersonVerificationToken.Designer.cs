// <auto-generated />
using System;
using EduConnect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduConnect.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241125220817_AddPersonVerificationToken")]
    partial class AddPersonVerificationToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EduConnect.Entities.Person.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.HasKey("PersonId");

                    b.ToTable("Person", "Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonDetails", b =>
                {
                    b.Property<Guid>("PersonDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumberCountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonDetailsId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("PersonDetails", "Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonEmail", b =>
                {
                    b.Property<Guid>("PersonEmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonEmailId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("PersonEmail", "Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonPassword", b =>
                {
                    b.Property<Guid>("PersonPasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PersonPasswordId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonPassword", "Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonProfilePicture", b =>
                {
                    b.Property<Guid>("PersonProfilePictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonProfilePictureId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonProfilePicture", "Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonSalt", b =>
                {
                    b.Property<Guid>("PersonSaltId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<int>("NumberOfRounds")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonSaltId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonSalt", "Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Student.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId");

                    b.HasIndex("PersonId");

                    b.ToTable("Student", "Student");
                });

            modelBuilder.Entity("EduConnect.Entities.Student.StudentDetails", b =>
                {
                    b.Property<Guid>("StudentDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<string>("CurrentAcademicInstitution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentEducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAreaOfSpecialisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentDetailsId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentDetails", "Student");
                });

            modelBuilder.Entity("EduConnect.Entities.Tutor.Tutor", b =>
                {
                    b.Property<Guid>("TutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TutorId");

                    b.HasIndex("PersonId");

                    b.ToTable("Tutor", "Tutor");
                });

            modelBuilder.Entity("backend.Entities.Person.PersonVerificationCode", b =>
                {
                    b.Property<Guid>("PersonVerificationCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpiryDateTime")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonVerificationCodeId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonVerificationCode");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonDetails", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithOne("PersonDetails")
                        .HasForeignKey("EduConnect.Entities.Person.PersonDetails", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonEmail", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithOne("PersonEmail")
                        .HasForeignKey("EduConnect.Entities.Person.PersonEmail", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonPassword", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonProfilePicture", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.PersonSalt", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Student.Student", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Student.StudentDetails", b =>
                {
                    b.HasOne("EduConnect.Entities.Student.Student", "Student")
                        .WithOne("StudentDetails")
                        .HasForeignKey("EduConnect.Entities.Student.StudentDetails", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduConnect.Entities.Tutor.Tutor", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("backend.Entities.Person.PersonVerificationCode", b =>
                {
                    b.HasOne("EduConnect.Entities.Person.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("EduConnect.Entities.Person.Person", b =>
                {
                    b.Navigation("PersonDetails")
                        .IsRequired();

                    b.Navigation("PersonEmail")
                        .IsRequired();
                });

            modelBuilder.Entity("EduConnect.Entities.Student.Student", b =>
                {
                    b.Navigation("StudentDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
